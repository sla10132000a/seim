import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { gql, useMutation } from "@apollo/client";
import React, { useState } from "react";

// graphql mutation
const QUERY = gql`
mutation updateImage($content:String!) {
  updateImage(input:{content:$content})
   {
     kind
   }
 }
`;

//fcs
export default function Home() {
  //graphql
  const [getTodo, { loading: loading_get, error: error_get, data }] = useMutation(QUERY, { fetchPolicy: "no-cache" });

  // state
  const [profileImage, setProfileImage] = useState(null);
  const [fileUrl, setFileUrl] = useState(null);

  //function
  const onChangeImage = e => {
    const file = e.target.files[0]
    const reader = new FileReader()
    reader.onload = arg => {
      setProfileImage(arg.target.result);
      setFileUrl(arg.target.result)
    }

    if (file instanceof Blob) {
      reader.readAsDataURL(file)
    }
  }

  const onClickAction = e => {
    e.preventDefault();
    getTodo({ variables: { content: profileImage } });
  }

  // view
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className="text-xl text-gray-800">　犬顔？猫顔？</h1>
        <img src={fileUrl} width="200" height="150"></img>
        <div className="grid grid-cols-2 gap-4 ml-10">
          <div>
            <label
              className="w-50 flex flex-col items-center px-3 mt-1 bg-white rounded-md shadow-md tracking-wide uppercase border border-blue cursor-pointer hover:bg-purple-600 hover:text-white text-purple-600 ease-linear transition-all duration-150">
              <i className="fas fa-cloud-upload-alt fa-3x"></i>
              <span className="py-1 text-base leading-normal">Select a file</span>
              <input type='file' className="hidden" onChange={onChangeImage} />
            </label>
          </div>
          <div>
            <button onClick={onClickAction} className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 mt-1 px-4 rounded">
              診断
            </button>
          </div>
        </div>

        {loading_get &&
         <div>診断中...</div>
        }
        { !loading_get &&
          <div>
           <span>診断結果：</span>
           <span>
            {data?.updateImage?.kind == "0" ? "犬" : "猫"}
          </span>
          <span>{loading_get}</span>
        </div>
        }
      </main>

    </div>
  )
}